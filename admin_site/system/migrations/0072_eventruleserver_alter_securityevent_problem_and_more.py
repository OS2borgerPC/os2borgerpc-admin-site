# Generated by Django 4.2.1 on 2023-07-04 11:34

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("system", "0071_remove_pc_is_update_required"),
    ]

    operations = [
        migrations.CreateModel(
            name="EventRuleServer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("Critical", "securitylevel:Critical"),
                            ("High", "securitylevel:High"),
                            ("Normal", "securitylevel:Normal"),
                        ],
                        default="High",
                        max_length=10,
                        verbose_name="level",
                    ),
                ),
                (
                    "monitor_period_start",
                    models.TimeField(verbose_name="monitor period start"),
                ),
                (
                    "monitor_period_end",
                    models.TimeField(verbose_name="monitor period end"),
                ),
                (
                    "maximum_offline_period",
                    models.PositiveSmallIntegerField(
                        default=15,
                        help_text="How long a PC may be offline before an event is created",
                        validators=[django.core.validators.MinValueValidator(15)],
                        verbose_name="maximum offline period allowed, in minutes",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.AlterField(
            model_name="securityevent",
            name="problem",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="system.securityproblem",
            ),
        ),
        migrations.AlterField(
            model_name="securityproblem",
            name="alert_groups",
            field=models.ManyToManyField(
                blank=True,
                related_name="%(class)s",
                to="system.pcgroup",
                verbose_name="alert groups",
            ),
        ),
        migrations.AlterField(
            model_name="securityproblem",
            name="alert_users",
            field=models.ManyToManyField(
                blank=True,
                related_name="%(class)s",
                to=settings.AUTH_USER_MODEL,
                verbose_name="alert users",
            ),
        ),
        migrations.AlterField(
            model_name="securityproblem",
            name="site",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="system.site",
            ),
        ),
        migrations.AddField(
            model_name="eventruleserver",
            name="alert_groups",
            field=models.ManyToManyField(
                blank=True,
                related_name="%(class)s",
                to="system.pcgroup",
                verbose_name="alert groups",
            ),
        ),
        migrations.AddField(
            model_name="eventruleserver",
            name="alert_users",
            field=models.ManyToManyField(
                blank=True,
                related_name="%(class)s",
                to=settings.AUTH_USER_MODEL,
                verbose_name="alert users",
            ),
        ),
        migrations.AddField(
            model_name="eventruleserver",
            name="site",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="system.site",
            ),
        ),
        migrations.AddField(
            model_name="securityevent",
            name="event_rule_server",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="system.eventruleserver",
            ),
        ),
        migrations.AddConstraint(
            model_name="securityevent",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("event_rule_server", None), ("problem__isnull", False)),
                    models.Q(("event_rule_server__isnull", False), ("problem", None)),
                    _connector="OR",
                ),
                name="problem_or_rule_set",
            ),
        ),
    ]
